using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using BLL_PolyCafe;
using DTO_PolyCafe;

namespace GUI_PolyCafe
{
    public partial class frmQuanLyLoaiSanPham : Form
    {
        private BUSLoaiSanPham busLoaiSanPham;
        public frmQuanLyLoaiSanPham()
        {
            InitializeComponent();
            busLoaiSanPham = new BUSLoaiSanPham();
        }

        private void dgvLoaiSanPham_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void btnThem_Click(object sender, EventArgs e)
        {
            try
            {
                string tenLoai = txtTenLoai.Text.Trim();
                string ghiChu = txtGhiChuSP.Text.Trim();

                if (string.IsNullOrEmpty(tenLoai))
                {
                    MessageBox.Show("Vui lòng nhập tên loại sản phẩm!", "Thông báo",
                        MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                LoaiSanPham loaiSP = new LoaiSanPham
                {
                    TenLoai = tenLoai,
                    GhiChu = ghiChu
                    // MaLoai is generated by BLL
                };

                string result = busLoaiSanPham.InsertLoaiSanPham(loaiSP);
                if (string.IsNullOrEmpty(result))
                {
                    MessageBox.Show("Thêm loại sản phẩm thành công!", "Thông báo",
                        MessageBoxButtons.OK, MessageBoxIcon.Information);
                    ClearForm();
                    LoadDanhSachLoaiSP();
                }
                else
                {
                    MessageBox.Show(result, "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi: " + ex.Message, "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnSua_Click(object sender, EventArgs e)
        {
            try
            {
                string maLoai = txtMaLoai.Text.Trim();
                string tenLoai = txtTenLoai.Text.Trim();
                string ghiChu = txtGhiChuSP.Text.Trim();

                if (string.IsNullOrEmpty(maLoai) || string.IsNullOrEmpty(tenLoai))
                {
                    MessageBox.Show("Vui lòng điền đầy đủ thông tin!", "Thông báo",
                        MessageBoxButtons.OK, MessageBoxIcon.Warning);
                    return;
                }

                LoaiSanPham loaiSP = new LoaiSanPham
                {
                    MaLoai = maLoai,
                    TenLoai = tenLoai,
                    GhiChu = ghiChu
                };

                string result = busLoaiSanPham.UpdateLoaiSanPham(loaiSP);
                if (string.IsNullOrEmpty(result))
                {
                    MessageBox.Show("Cập nhật loại sản phẩm thành công!", "Thông báo",
                        MessageBoxButtons.OK, MessageBoxIcon.Information);
                    ClearForm();
                    LoadDanhSachLoaiSP();
                }
                else
                {
                    MessageBox.Show(result, "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Lỗi: " + ex.Message, "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btnXoa_Click(object sender, EventArgs e)
        {
            string maLoai = txtMaLoai.Text.Trim();

            if (string.IsNullOrEmpty(maLoai))
            {
                if (dgvLoaiSanPham.SelectedRows.Count > 0)
                {
                    DataGridViewRow selectedRow = dgvLoaiSanPham.SelectedRows[0];
                    maLoai = selectedRow.Cells["MaLoai"].Value.ToString();
                }
                else
                {
                    MessageBox.Show("Vui lòng chọn một loại sản phẩm để xóa!", "Lỗi",
                        MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
            }

            DialogResult result = MessageBox.Show($"Bạn có chắc chắn muốn xóa loại {maLoai}?",
                "Xác nhận xóa", MessageBoxButtons.YesNo, MessageBoxIcon.Warning);

            if (result == DialogResult.Yes)
            {
                string kq = busLoaiSanPham.DeleteLoaiSanPham(maLoai);

                if (string.IsNullOrEmpty(kq))
                {
                    MessageBox.Show($"Xóa loại {maLoai} thành công!", "Thông báo",
                        MessageBoxButtons.OK, MessageBoxIcon.Information);
                    ClearForm();
                    LoadDanhSachLoaiSP();
                }
                else
                {
                    MessageBox.Show(kq, "Lỗi", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }
        }

        private void btnLamMoi_Click(object sender, EventArgs e)
        {
            ClearForm();
            LoadDanhSachLoaiSP();
        }

        private void ClearForm()
        {
            txtMaLoai.Enabled = false; // MaLoai is auto-generated for inserts
            txtMaLoai.Clear();
            txtTenLoai.Clear();
            txtGhiChuSP.Clear();
            btnThem.Enabled = true;
            btnSua.Enabled = true;
            btnXoa.Enabled = true;
            txtTimKiem.Clear();
        }

        private void LoadDanhSachLoaiSP()
        {
            dgvLoaiSanPham.DataSource = null;
            List<LoaiSanPham> danhSach = busLoaiSanPham.GetLoaiSanPhamList();

            DataTable table = new DataTable();
            table.Columns.Add("MaLoai");
            table.Columns.Add("TenLoai");
            table.Columns.Add("GhiChu");

            foreach (var loaiSP in danhSach)
            {
                table.Rows.Add(
                    loaiSP.MaLoai,
                    loaiSP.TenLoai,
                    loaiSP.GhiChu
                );
            }

            dgvLoaiSanPham.DataSource = table;
        }

        private void dgvLoaiSanPham_SelectionChanged(object sender, EventArgs e)
        {
            if (dgvLoaiSanPham.SelectedRows.Count > 0)
            {
                var row = dgvLoaiSanPham.SelectedRows[0];

                txtMaLoai.Text = row.Cells["MaLoai"].Value?.ToString();
                txtTenLoai.Text = row.Cells["TenLoai"].Value?.ToString();
                txtGhiChuSP.Text = row.Cells["GhiChu"].Value?.ToString();

                txtMaLoai.Enabled = false; // Disable MaLoai for editing
            }
        }

        private void btnTimKiem_Click(object sender, EventArgs e)
        {
            string searchText = txtTimKiem.Text.Trim();

            if (string.IsNullOrEmpty(searchText))
            {
                MessageBox.Show("Vui lòng nhập từ khóa tìm kiếm!", "Thông báo",
                    MessageBoxButtons.OK, MessageBoxIcon.Warning);
                LoadDanhSachLoaiSP(); // Reload full list if no search term
                return;
            }

            List<LoaiSanPham> danhSach = busLoaiSanPham.GetLoaiSanPhamList();
            var filteredList = danhSach.Where(loai =>
                loai.MaLoai.ToLower().Contains(searchText.ToLower()) ||
                loai.TenLoai.ToLower().Contains(searchText.ToLower()) ||
                (loai.GhiChu != null && loai.GhiChu.ToLower().Contains(searchText.ToLower()))).ToList();

            DataTable table = new DataTable();
            table.Columns.Add("MaLoai");
            table.Columns.Add("TenLoai");
            table.Columns.Add("GhiChu");

            foreach (var loaiSP in filteredList)
            {
                table.Rows.Add(
                    loaiSP.MaLoai,
                    loaiSP.TenLoai,
                    loaiSP.GhiChu
                );
            }

            dgvLoaiSanPham.DataSource = null; // Clear existing data
            dgvLoaiSanPham.DataSource = table;

            if (filteredList.Count == 0)
            {
                MessageBox.Show("Không tìm thấy loại sản phẩm nào!", "Thông báo",
                    MessageBoxButtons.OK, MessageBoxIcon.Information);
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            Close();
        }

        private void frmQuanLyLoaiSanPham_Load(object sender, EventArgs e)
        {
            ClearForm();
            LoadDanhSachLoaiSP();
        }

        private void frmQuanLyLoaiSanPham_Resize(object sender, EventArgs e)
        {
            label1.Left = (this.ClientSize.Width - label1.Width) / 2;
            label1.Top = 10;
        }
    }
}
